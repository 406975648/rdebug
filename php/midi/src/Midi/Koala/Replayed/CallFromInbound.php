<?php
namespace Midi\Koala\Replayed;

/**
 * Autogenerated by Disf-CodeGen (0.1.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */    

/** 
    * @property int OriginalRequestTime 
    * @property string ActionType 
    * @property int OccurredAt 
    * @property string ActionId 
    * @property string OriginalRequest 
*/ 
class CallFromInbound extends \ArrayObject {

    public static $SCHEMA = array( 
        'disfSchemaFormatVersion' => 1003,
        'isUnion' => false,
        'classObject' => CallFromInbound::class,
        'className' => 'Midi\Koala\Replayed\CallFromInbound',
        'annotations' => array(),
        'fields' => array(
            "OriginalRequestTime" => array(
                "fieldId" => 4, 
                "thriftType" => 'I64',
                "isRequired" => False,
                "annotations" => array(),
            ),
            "ActionType" => array(
                "fieldId" => 3, 
                "thriftType" => 'STRING',
                "isRequired" => False,
                "annotations" => array(),
            ),
            "OccurredAt" => array(
                "fieldId" => 2, 
                "thriftType" => 'I64',
                "isRequired" => False,
                "annotations" => array(),
            ),
            "ActionId" => array(
                "fieldId" => 1, 
                "thriftType" => 'STRING',
                "isRequired" => False,
                "annotations" => array(),
            ),
            "OriginalRequest" => array(
                "fieldId" => 5, 
                "thriftType" => 'STRING',
                "isRequired" => False,
                "annotations" => array(),
            ),
        ),
    );

    public function __construct($array = null) 
    {
        if (!isset($array)) { 
            parent::__construct(array(), \ArrayObject::ARRAY_AS_PROPS);
            return;
        }

        parent::__construct($array, \ArrayObject::ARRAY_AS_PROPS); 

        if(isset($array["OriginalRequestTime"])) { 
            $this->setOriginalRequestTime($array["OriginalRequestTime"]);
        }

        if(isset($array["ActionType"])) { 
            $this->setActionType($array["ActionType"]);
        }

        if(isset($array["OccurredAt"])) { 
            $this->setOccurredAt($array["OccurredAt"]);
        }

        if(isset($array["ActionId"])) { 
            $this->setActionId($array["ActionId"]);
        }

        if(isset($array["OriginalRequest"])) { 
            $this->setOriginalRequest($array["OriginalRequest"]);
        }

    }

    /** 
     * @return int 
    */ 
    public function getOriginalRequestTime()/* : int */ {
        return \Midi\Koala\Common\TypeConverter::to_int($this["OriginalRequestTime"]);
    }

    /** 
     * @param int $val 
    */ 
    public function setOriginalRequestTime(/* int */ $val) {
        $this["OriginalRequestTime"] = \Midi\Koala\Common\TypeConverter::to_int($val);
    }

    /** 
     * @return string 
    */ 
    public function getActionType()/* : string */ {
        return \Midi\Koala\Common\TypeConverter::to_string($this["ActionType"]);
    }

    /** 
     * @param string $val 
    */ 
    public function setActionType(/* string */ $val) {
        $this["ActionType"] = \Midi\Koala\Common\TypeConverter::to_string($val);
    }

    /** 
     * @return int 
    */ 
    public function getOccurredAt()/* : int */ {
        return \Midi\Koala\Common\TypeConverter::to_int($this["OccurredAt"]);
    }

    /** 
     * @param int $val 
    */ 
    public function setOccurredAt(/* int */ $val) {
        $this["OccurredAt"] = \Midi\Koala\Common\TypeConverter::to_int($val);
    }

    /** 
     * @return string 
    */ 
    public function getActionId()/* : string */ {
        return \Midi\Koala\Common\TypeConverter::to_string($this["ActionId"]);
    }

    /** 
     * @param string $val 
    */ 
    public function setActionId(/* string */ $val) {
        $this["ActionId"] = \Midi\Koala\Common\TypeConverter::to_string($val);
    }

    /** 
     * @return string 
    */ 
    public function getOriginalRequest()/* : string */ {
        return \Midi\Koala\Common\TypeConverter::to_string($this["OriginalRequest"]);
    }

    /** 
     * @param string $val 
    */ 
    public function setOriginalRequest(/* string */ $val) {
        $this["OriginalRequest"] = \Midi\Koala\Common\TypeConverter::to_string($val);
    }
}

/* THRIFT IDL
namespace php koala.replayed

struct CallFromInbound {
    1: string ActionId
    2: i64 OccurredAt
    3: string ActionType
    4: i64 OriginalRequestTime
    5: binary OriginalRequest
}
*/